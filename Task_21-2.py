'''Напишите функцию, которая находит оптимальный маршрут из верхнего
левого угла в правый нижний угол матрицы. Двигаться можно только вправо
или вниз. В каждой клетке матрице содержится число. Оптимальным
считается маршрут с минимальной суммой чисел клеток, через которые
проходит маршрут.
Например, если матрица 3 х 3: , то оптимальным будем маршрут,
который проходит через клетки 10 + 5 + 1 + 2 + 70 = 88.
Подсказка: полный перебор вариантов заведомо неэффективен.
Возможное решение – идти от начала и запоминать оптимальные маршруты
для каждой клетки из начала.'''

def find_optimal_route(matrix):
    rows = len(matrix)
    cols = len(matrix[0])

    dp = [[0] * cols for _ in range(rows)]

    dp[0][0] = matrix[0][0]

    for i in range(1, cols):
        dp[0][i] = dp[0][i - 1] + matrix[0][i]


    for i in range(1, rows):
        dp[i][0] = dp[i - 1][0] + matrix[i][0]

    for i in range(1, rows):
        for j in range(1, cols):
            dp[i][j] = matrix[i][j] + min(dp[i - 1][j], dp[i][j - 1])

    return dp[rows - 1][cols - 1]

matrix = [
    [10, 5, 1],
    [2, 15, 20],
    [30, 5, 70]
]

print("The optimal route sum is:", find_optimal_route(matrix))
